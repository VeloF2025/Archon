# Kubernetes Ingress for Archon Phase 6 Authentication System
# Production-ready with SSL/TLS, rate limiting, and security headers

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: archon-ingress
  namespace: archon-production
  labels:
    app.kubernetes.io/name: archon
    app.kubernetes.io/component: ingress
  annotations:
    # Ingress controller
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Authentication rate limiting (stricter)
    nginx.ingress.kubernetes.io/server-snippet: |
      location ~ ^/api/(auth|login|register) {
        limit_req zone=auth burst=5 nodelay;
      }
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:; frame-ancestors 'none';" always;
    
    # Body size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # Timeout configurations
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # WebSocket support for Socket.IO
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippet: |
      location /socket.io/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

spec:
  tls:
  - hosts:
    - api.archon.com
    - app.archon.com
    - admin.archon.com
    secretName: archon-tls-secret
  
  rules:
  # Main application frontend
  - host: app.archon.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: archon-frontend
            port:
              number: 3737
  
  # API backend services
  - host: api.archon.com
    http:
      paths:
      # Main server API
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: archon-server
            port:
              number: 8181
      
      # Socket.IO real-time connections
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: archon-server
            port:
              number: 8181
      
      # MCP service endpoints
      - path: /mcp
        pathType: Prefix
        backend:
          service:
            name: archon-mcp
            port:
              number: 8051
      
      # Agents service endpoints
      - path: /agents
        pathType: Prefix
        backend:
          service:
            name: archon-agents
            port:
              number: 8052
      
      # Validator service endpoints
      - path: /validator
        pathType: Prefix
        backend:
          service:
            name: archon-validator
            port:
              number: 8053
  
  # Admin/monitoring interfaces
  - host: admin.archon.com
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
      
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090

---
# Certificate Issuer for automatic TLS certificate management
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: devops@archon.com
    privateKeySecretRef:
      name: letsencrypt-prod-private-key
    solvers:
    - http01:
        ingress:
          class: nginx

---
# Staging certificate issuer for testing
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: devops@archon.com
    privateKeySecretRef:
      name: letsencrypt-staging-private-key
    solvers:
    - http01:
        ingress:
          class: nginx

---
# Network Policy for ingress security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: archon-ingress-network-policy
  namespace: archon-production
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: archon
  policyTypes:
  - Ingress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
  # Allow traffic from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: archon-monitoring
  # Allow internal service communication
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: archon