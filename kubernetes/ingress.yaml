apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: archon-ingress
  namespace: archon-prod
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - archon.example.com
    - api.archon.example.com
    secretName: archon-tls
  rules:
  - host: archon.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: archon-frontend-service
            port:
              number: 3737
  - host: api.archon.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: archon-server-service
            port:
              number: 8181
---
apiVersion: v1
kind: Service
metadata:
  name: archon-frontend-service
  namespace: archon-prod
spec:
  type: ClusterIP
  ports:
  - port: 3737
    targetPort: 3737
  selector:
    app: archon-frontend