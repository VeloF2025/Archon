# Multi-stage Dockerfile for Phase 7: Autonomous AI Agents & Orchestration

# Base stage with common dependencies
FROM python:3.12-slim as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements
COPY requirements.server.txt requirements.txt
COPY requirements.mcp.txt requirements.mcp.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements.mcp.txt && \
    pip install --no-cache-dir \
    redis>=5.0.0 \
    pika>=1.3.0 \
    psycopg2-binary>=2.9.0 \
    numpy>=1.24.0 \
    scipy>=1.11.0 \
    pytest>=7.4.0 \
    pytest-asyncio>=0.21.0

# Copy application code
COPY python/src /app/src
COPY python/config /app/config

# Create necessary directories
RUN mkdir -p /app/logs /app/workspace /app/models /app/datasets

# Orchestrator stage
FROM base as orchestrator

# Install additional orchestrator dependencies
RUN pip install --no-cache-dir \
    uvicorn>=0.24.0 \
    fastapi>=0.104.0 \
    websockets>=12.0 \
    prometheus-client>=0.19.0

# Expose ports
EXPOSE 8500 8501

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8500/health || exit 1

# Run orchestrator
CMD ["python", "-m", "src.agents.autonomous.orchestrator_service"]

# Agent stage
FROM base as agent

# Install agent-specific dependencies
RUN pip install --no-cache-dir \
    aiofiles>=23.0.0 \
    httpx>=0.25.0 \
    watchdog>=3.0.0

# Run agent
CMD ["python", "-m", "src.agents.autonomous.agent_service"]

# ML Agent stage with GPU support
FROM base as ml-agent

# Install ML libraries
RUN pip install --no-cache-dir \
    tensorflow>=2.15.0 \
    torch>=2.1.0 \
    torchvision>=0.16.0 \
    scikit-learn>=1.3.0 \
    transformers>=4.35.0 \
    xgboost>=2.0.0 \
    lightgbm>=4.1.0

# Install CUDA dependencies for GPU support (optional)
ARG CUDA_VERSION=12.1
RUN if [ "${ENABLE_GPU}" = "true" ]; then \
    apt-get update && apt-get install -y \
    cuda-toolkit-${CUDA_VERSION} \
    cudnn8 \
    && rm -rf /var/lib/apt/lists/*; \
    fi

# Run ML agent
CMD ["python", "-m", "src.agents.ml.ml_agent_service"]

# Jupyter stage for development
FROM ml-agent as jupyter

# Install Jupyter and extensions
RUN pip install --no-cache-dir \
    jupyterlab>=4.0.0 \
    ipywidgets>=8.1.0 \
    matplotlib>=3.8.0 \
    seaborn>=0.13.0 \
    plotly>=5.18.0 \
    pandas>=2.1.0

# Expose Jupyter port
EXPOSE 8888

# Run Jupyter Lab
CMD ["jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]

# Production stage (minimal)
FROM python:3.12-slim as production

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy from base stage
COPY --from=base /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=base /app /app

# Create non-root user
RUN useradd -m -u 1000 archon && \
    chown -R archon:archon /app

USER archon

# Default to orchestrator
CMD ["python", "-m", "src.agents.autonomous.orchestrator_service"]