[pytest]
# Pytest configuration for Archon PM System Enhancement TDD Suite
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function
asyncio_default_test_loop_scope = function

# Test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=95
    --durations=10
    --maxfail=50
    -ra

# Markers for test organization
markers =
    tdd_red: marks tests that should initially fail (RED phase of TDD)
    historical: marks tests for historical work discovery
    realtime: marks tests for real-time activity monitoring  
    verification: marks tests for implementation verification
    task_mgmt: marks tests for dynamic task management
    performance: marks tests for performance requirements
    integration: marks tests for system integration
    accuracy: marks tests for data accuracy validation
    slow: marks tests as slow running (deselect with '-m "not slow"')
    unit: marks tests as unit tests
    asyncio: marks tests as requiring asyncio

# Timeout configuration (tests should fail fast in TDD)
timeout = 300
timeout_method = thread

# Minimum pytest version
minversion = 8.0

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */conftest.py
    */__pycache__/*
    */venv/*
    */.venv/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod
    # RED phase markers - these are expected to fail initially
    # ðŸ”´ RED:

[coverage:html]
directory = htmlcov 